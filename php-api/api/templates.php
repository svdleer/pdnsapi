<?php// Determine the correct base path$base_path = realpath(__DIR__ . '/..');require_once $base_path . '/config/config.php';require_once $base_path . '/config/database.php';require_once $base_path . '/includes/database-compat.php';// API key is already validated in index.php, log the requestlogApiRequest('templates', $_SERVER['REQUEST_METHOD'], 200);// Get PowerDNS Admin database connection$pdns_admin_conn = null;if (class_exists('PDNSAdminDatabase')) {    $pdns_admin_db = new PDNSAdminDatabase();    $pdns_admin_conn = $pdns_admin_db->getConnection();}// Get the HTTP method$request_method = $_SERVER["REQUEST_METHOD"];// Get parameters from URL$template_id = isset($_GET['id']) ? $_GET['id'] : null;$template_name = isset($_GET['name']) ? $_GET['name'] : null;switch($request_method) {    case 'GET':        if ($template_id) {            // Get specific template by ID            getTemplateById($template_id);        } elseif ($template_name) {            // Get specific template by name            getTemplateByName($template_name);        } else {            // Get all templates            getAllTemplates();        }        break;            default:        sendError(405, "Method not allowed");        break;}/** * Get all available templates */function getAllTemplates() {    global $pdns_admin_conn;        if (!$pdns_admin_conn) {        sendError(500, "Database connection failed");    }        try {        $stmt = $pdns_admin_conn->prepare("SELECT id, name, description FROM domain_template ORDER BY name");        $stmt->execute();        $templates = $stmt->fetchAll(PDO::FETCH_ASSOC);                sendResponse(200, $templates, "Templates retrieved successfully");    } catch (PDOException $e) {        error_log("Error getting templates: " . $e->getMessage());        sendError(500, "Failed to retrieve templates");    }}/** * Get template by ID */function getTemplateById($template_id) {    global $pdns_admin_conn;        if (!$pdns_admin_conn) {        sendError(500, "Database connection failed");    }        try {        // Get template info        $stmt = $pdns_admin_conn->prepare("SELECT id, name, description FROM domain_template WHERE id = ?");        $stmt->execute([$template_id]);        $template = $stmt->fetch(PDO::FETCH_ASSOC);                if (!$template) {            sendError(404, "Template not found");        }                // Get template records        $stmt = $pdns_admin_conn->prepare("            SELECT name as record_name, type, data as content, ttl, comment            FROM domain_template_record             WHERE template_id = ? AND status = 1             ORDER BY name, type        ");        $stmt->execute([$template_id]);        $records = $stmt->fetchAll(PDO::FETCH_ASSOC);                $template['records'] = $records;                sendResponse(200, $template, "Template retrieved successfully");    } catch (PDOException $e) {        error_log("Error getting template by ID: " . $e->getMessage());        sendError(500, "Failed to retrieve template");    }}/** * Get template by name */function getTemplateByName($template_name) {    global $pdns_admin_conn;        if (!$pdns_admin_conn) {        sendError(500, "Database connection failed");    }        try {        // Get template info        $stmt = $pdns_admin_conn->prepare("SELECT id, name, description FROM domain_template WHERE name = ?");        $stmt->execute([$template_name]);        $template = $stmt->fetch(PDO::FETCH_ASSOC);                if (!$template) {            sendError(404, "Template not found");        }                // Get template records        $stmt = $pdns_admin_conn->prepare("            SELECT name as record_name, type, data as content, ttl, comment            FROM domain_template_record             WHERE template_id = ? AND status = 1             ORDER BY name, type        ");        $stmt->execute([$template['id']]);        $records = $stmt->fetchAll(PDO::FETCH_ASSOC);                $template['records'] = $records;                sendResponse(200, $template, "Template retrieved successfully");    } catch (PDOException $e) {        error_log("Error getting template by name: " . $e->getMessage());        sendError(500, "Failed to retrieve template");    }}?>